// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	clientset "k8s.io/client-go/kubernetes"
	"net/http"

	"gpu-container-service/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

type Router struct {
	server *rest.Server
}

func NewRouter(server *rest.Server) *Router {
	return &Router{server: server}
}

func (r *Router) Get(p string, h http.HandlerFunc) {
	r.server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    p,
				Handler: h,
			},
		})
}

func (r *Router) Put(p string, h http.HandlerFunc) {
	r.server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPut,
				Path:    p,
				Handler: h,
			},
		})
}

func (r *Router) Post(p string, h http.HandlerFunc) {
	r.server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    p,
				Handler: h,
			},
		})
}

func RegisterHandlers(r *Router, serverCtx *svc.CreateInstanceContext, client clientset.Interface) {
	instance_creator := NewCreateInstanceHandler(serverCtx, client)
	socket_manager := NewTerminalSessionHandler(serverCtx)
	r.Post("/gpu-containers/instances", instance_creator.CreateInstance)
	r.Get("/gpu-containers/terminals", socket_manager.TerminalSession)
}
